import msfrpc
import subprocess
import time

# Function to read hosts from the file
def read_hosts(file_path):
    with open(file_path, 'r') as file:
        return [line.strip() for line in file if line.strip()]

# Connect to Metasploit
def connect_to_metasploit(username, password):
    client = msfrpc.Msfrpc({})
    client.login(username, password)
    return client

# Scan hosts and add to Metasploit database using proxychains
def scan_and_add_hosts(msf_client, hosts):
    for host in hosts:
        # Configure and run the scan module
        scan_module = msf_client.call('module.use', ['auxiliary', 'scanner/portscan/tcp'])
        scan_module.call('module.set', ['RHOSTS', host])
        scan_module.call('module.set', ['PORTS', '1-65535'])
        scan_module.call('module.set', ['THREADS', 10])
        
        # Save the scan options
        options = scan_module.call('module.options')
        
        # Generate the RPC command
        rpc_command = f"rpc.call('module.execute', ['{scan_module}', {options}])"
        
        # Use proxychains to run the RPC command
        proxychains_command = f"proxychains msfconsole -x '{rpc_command}'"
        subprocess.run(proxychains_command, shell=True)
        
        # Sleep to allow scan to complete
        time.sleep(60)  # Adjust the sleep time based on the scan duration

        # Add the host to the database
        msf_client.call('db.add_host', [host])

# Main function
def main():
    live_hosts_file = 'path/to/pentesting/live_hosts.txt'
    username = 'msf_username'
    password = 'msf_password'
    
    # Read hosts
    hosts = read_hosts(live_hosts_file)
    
    # Connect to Metasploit
    msf_client = connect_to_metasploit(username, password)
    
    # Scan and add hosts to database using proxychains
    scan_and_add_hosts(msf_client, hosts)

if __name__ == '__main__':
    main()
