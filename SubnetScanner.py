import nmap
import random
import time

# Define the subnet to scan
subnet = '192.168.1.0/24'

# Create an instance of the nmap.PortScanner() class
scanner = nmap.PortScanner()

# Set the maximum number of simultaneous connections to 10
max_parallelism = 10

# Set the delay between packets to a random value between 0.1 and 1 seconds
min_timing = 0.1
max_timing = 1.0

# Set the bytes to split the scan packets
split_bytes = b'\x01\x02\x03\x04\x05\x06\x07\x08'

# Construct the arguments for the scan
arguments = f"-p 1-65535 -sV --max-parallelism {max_parallelism} --min-rtt-timeout {min_timing}ms --max-rtt-timeout {max_timing}ms --data-string {split_bytes.decode()}"

# Perform the full scan on the subnet
scanner.scan(hosts=subnet, arguments=arguments)

# Open the kremlin.txt file for writing
with open('kremlin.txt', 'w') as f:
    # Loop over each host in the scan results
    for host in scanner.all_hosts():
        # Loop over each port for the current host
        for port in scanner[host]['tcp']:
            # Get the service name and version for the current port
            service_name = scanner[host]['tcp'][port]['name']
            service_version = scanner[host]['tcp'][port]['version']
            # Write the results to the kremlin.txt file
            f.write(f"{host}:{port} - {service_name} {service_version}\n")
            # Add a random delay jitter before scanning the next port
            time.sleep(random.uniform(0.1, 1.0))
